spring:
  config:
    activate:
      on-profile: local
  sql:
    init:
      mode: always
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/uket?useSSL=false&allowPublicKeyRetrieval=true
    username: ${LOCAL_MYSQL_USERNAME}
    password: ${LOCAL_MYSQL_PASSWORD}
    hikari:
      maximum-pool-size: 40
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    urls:
      base-url: ${MAIL_SEND_BASE_URL}
      image-url: ${MAIL_SEND_IMAGE_URL}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
      auth-code-expiration-millis: 180000
  data:
    redis:
      host: localhost
      port: 6379
  cloud:
    aws:
      s3:
        access-key: ${AWS_S3_ACCESS_KEY}
        secret-key: ${AWS_S3_SECRET_KEY}
        bucket: ${AWS_S3_BUCKET}

app:
  token:
    secret-key: testestsetsetsetsetsetsetsetsetestset
    expiration:
      access-token-expiration: 600_000
      refresh-token-expiration: 7_200_000
      email-token-expiration: 86_400_000
  kakao:
    token_uri: https://kauth.kakao.com/oauth/token
    user-info-uri: https://kapi.kakao.com/v2/user/me
    client-id: ${KAKAO_CLIENT_ID}
    client-secret: ${KAKAO_CLIENT_SECRET}
  google:
    token_uri: https://www.googleapis.com/oauth2/v4/token
    user-info-uri: https://www.googleapis.com/oauth2/v1/userinfo
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
  slack:
    webhook:
      url: "test.url"
  qr-code:
    width: 300
    height: 300
    type: png
