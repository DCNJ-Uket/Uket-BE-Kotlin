spring:
  datasource:
    url: "jdbc:h2:mem:test"
    username : sa
    password :
  jpa:
    show_sql: true
    hibernate:
      format_sql: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: "test@gmail.com"
    password: "testPassword"
    urls:
      base-url: "testBaseUrl"
      image-url: "testImageUrl"
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
      auth-code-expiration-millis: 180000
  data:
    redis:
      host: localhost
      port: 6379
  cloud:
    aws:
      s3:
        access-key: "test-access-key"
        secret-key: "test-secret-key"
        bucket: "test-bucket"

app:
  token:
    secret-key: testestsetsetsetsetsetsetsetsetestset
    expiration:
      access-token-expiration: 600_000
      refresh-token-expiration: 7_200_000
      email-token-expiration: 86_400_000
      ticket-token-expiration: 1_200_000
  kakao:
    token_uri: https://kauth.kakao.com/oauth/token
    user-info-uri: https://kapi.kakao.com/v2/user/me
    client-id: ${KAKAO_CLIENT_ID}
    client-secret: ${KAKAO_CLIENT_SECRET}
  google:
    token_uri: https://www.googleapis.com/oauth2/v4/token
    user-info-uri: https://www.googleapis.com/oauth2/v1/userinfo
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
  slack:
    webhook:
      url: "test.url"
  qr-code:
    width: 300
    height: 300
    type: png

logging:
  level:
    org.hibernate.SQL: debug # logger에 출력하려면
    org.hibernate.type.descriptor.sql: trace # 파라미터 값 출력
